buildscript {
    ext {
        springBootVersion = '1.5.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
    baseName = 'dimo'
    version = '0.1.1'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity4:2.1.2.RELEASE')
    compile('org.springframework.boot:spring-boot-devtools:1.3.0.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-security:1.3.3.RELEASE')
//    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('mysql:mysql-connector-java:5.1.6')
    compile('com.h2database:h2:1.4.191')
    //Test dependencies
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.hibernate:hibernate-validator-cdi:5.1.0.Final')
    testCompile('javax.el:el-api:2.2')
}

eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

//Example execution : gradle bootRun -Dspring.profiles.active=dev
bootRun {
    systemProperties = System.properties
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}